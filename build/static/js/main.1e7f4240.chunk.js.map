{"version":3,"sources":["UserContext.js","Components/Home.js","Components/Navbar.js","API.js","Components/Cards/Card.js","Components/Cards/CompanyCard.js","Components/SearchBar.js","Components/Hooks/useLoggedIn.js","Components/CompaniesList.js","Components/Forms/Form.js","Components/Forms/LoginForm.js","Components/Forms/SignupForm.js","Components/Cards/JobCard.js","Components/CompanyInfo.js","Components/JobList.js","Components/ProfileInfo.js","Components/App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","Home","user","useContext","inner","className","to","firstName","Navbar","setUser","useState","render","setRender","onClick","username","HOST_PATH","process","API","data","axios","get","params","result","companies","console","log","handle","company","jobs","token","headers","post","patch","res","job_id","Card","title","body","link","logo","clickable","history","useHistory","click","push","src","CompanyCard","description","name","SearchBar","onSearch","searchValue","setSearchValue","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","useLoggedIn","loggedOut","localUser","JSON","parse","window","localStorage","getItem","CompaniesList","setCompanies","retreive","a","getCompanies","useEffect","filter","term","comps","map","c","GenericForm","inputs","destination","authType","error","setError","temp","forEach","i","formData","setFormData","handleSubmit","func","signUp","Login","getUser","res2","handleUpdate","d","Container","Form","FormGroup","Label","for","label","id","class","LoginForm","SignUpForm","JobCard","job","applied","setApplied","applications","includes","apply","u","salary","equity","CompanyInfo","setCompany","useParams","getCompany","j","JobList","setJobs","mounted","getJobs","ProfileInfo","lastName","email","password","submitted","setSubmitted","handleChange","validate","PatchUser","newUser","disabled","App","storedUser","setItem","stringify","Provider","exact","path","SignupForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e7f4240.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport default UserContext;","import React, {useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport UserContext from '../UserContext'\r\n\r\n\r\nlet Home=()=>{\r\n    let {user} = useContext(UserContext)\r\n    let inner=(\r\n        <>\r\n            <Link className='button-link' to='/login'><div>Login</div></Link>\r\n            <Link className='button-link' to='/signup'><div>Sign Up</div></Link>\r\n        </>\r\n    )\r\n    if(user!==null){\r\n        inner=<p className='home-greet'>Welcome back {user.firstName}!</p>\r\n    }\r\n\r\n\r\n    return(\r\n       <div className='home'>\r\n           <div className='home-container'>\r\n               <h1 className='home-title'>Jobly</h1>\r\n               <p className='home-text'>Find your perfect career match through our extensive listings!</p>\r\n               <div className='home-button-container'>\r\n                   {inner}\r\n               </div>\r\n           </div>\r\n       </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import React, {useContext, useState} from 'react';\r\nimport {NavLink, Link} from 'react-router-dom';\r\nimport UserContext from '../UserContext';\r\n\r\n\r\nlet Navbar=()=>{\r\n    let {user,setUser}=useContext(UserContext)\r\n    //simply wused to force update on context change\r\n    let [render, setRender] = useState(false)\r\n    const logout=()=>{\r\n        setUser(null)\r\n        setRender(!render)\r\n    }\r\n\r\n    return(\r\n        <nav className='navbar'>\r\n            <NavLink to='/'>Jobly</NavLink>\r\n            <div className='navbar-container'>\r\n            {user===null ? \r\n                <>\r\n                <NavLink to='/login'>Login</NavLink>\r\n                <NavLink to='/signup'>Signup</NavLink></>:\r\n                <>\r\n                <NavLink to='/companies'>Companies</NavLink>\r\n                <NavLink to='/jobs'>Jobs</NavLink>\r\n                <NavLink to='/profile'>Profile</NavLink>\r\n                <Link onClick={logout} to='/'>Logout ({user.username})</Link>\r\n                </>\r\n                }\r\n                \r\n            </div>\r\n\r\n\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import axios from 'axios'\r\nconst HOST_PATH = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\r\nclass API {\r\n    constructor(){\r\n\r\n    }\r\n    static async getCompanies(data){\r\n        try{\r\n            if(data){\r\n                let result = await axios.get(`${HOST_PATH}/companies`,{params:data})\r\n                return result.data.companies\r\n            }\r\n            let result = await axios.get(`${HOST_PATH}/companies`)\r\n            return result.data.companies\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n            return e\r\n        }\r\n\r\n        \r\n    }\r\n    static async getCompany(handle){\r\n        try{\r\n            let result = await axios.get(`${HOST_PATH}/companies/${handle}`)\r\n\r\n            return result.data.company\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n            return e\r\n        }\r\n    }\r\n\r\n    static async getJobs(data){\r\n        try{\r\n            if(data){\r\n                let result = await axios.get(`${HOST_PATH}/jobs`,{params:data})\r\n                return result.data.jobs\r\n            }\r\n            else{\r\n                let result = await axios.get(`${HOST_PATH}/jobs`)\r\n                return result.data.jobs\r\n\r\n            }\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n            return e\r\n        }\r\n\r\n    }\r\n    static async getUser(username,token){\r\n        try{\r\n            let result = await axios.get(`${HOST_PATH}/users/${username}`,{\r\n                headers:{\r\n                    'Authorization':`${token}`\r\n                }\r\n            })\r\n            return result.data.user\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n            return e\r\n        }\r\n\r\n    }\r\n    \r\n    //{username,password,first_name,last_name,email}=>token\r\n    static async signUp(data){\r\n        try{\r\n            let result = axios.post(`${HOST_PATH}/auth/register`,data);\r\n            return result\r\n\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n            return e\r\n        }\r\n\r\n    }\r\n    //{username,password}=>token\r\n    static async Login(data){\r\n        try{\r\n            let result = axios.post(`${HOST_PATH}/auth/token`,data);\r\n            return result\r\n\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n            return e\r\n        }\r\n    }\r\n    // {email,firstName,lastName},username => {modified user object from db }\r\n    static async PatchUser(username,data,token){\r\n       try{\r\n        let res = await axios.patch(`${HOST_PATH}/users/${username}`,data,{\r\n            headers:{'Authorization':`${token}`}\r\n        })\r\n        return res.data\r\n       }\r\n       catch(e){\r\n           console.log(e)\r\n       }\r\n    }\r\n    static async apply(job_id,username, token){\r\n        try{\r\n           let res = await axios.post(`${HOST_PATH}/users/${username}/jobs/${job_id}`,{},{headers:{'Authorization':`${token}`}})\r\n           console.log(res)\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n   \r\n}\r\n\r\nexport default API;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Card=({title, body, link,logo, clickable=false})=>{\r\n    let history = useHistory();\r\n\r\nconst redirect=()=>{\r\n    if(link!==null){\r\n        history.push(link)\r\n    }\r\n}\r\nconst click = clickable? 'clickable':''\r\n\r\n\r\n\r\n    return(\r\n        <div onClick={redirect} className={`mcard ${click}`}>\r\n            <div className='mcard-container'>\r\n                <h2 className='mcard-title'>{title}</h2>\r\n                {logo && <img className='mcard-image' src={logo}/>}\r\n            </div>\r\n            {body}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\n\r\nconst CompanyCard=({company})=>{\r\n\r\n    let body=(\r\n    <p className='mcard-description'>\r\n        {company.description}\r\n    </p>\r\n    )\r\n    return(\r\n    <Card\r\n    title={company.name}\r\n    body={body}\r\n    link={`/companies/${company.handle}`}\r\n    clickable\r\n    ></Card>)\r\n}\r\n\r\nexport default CompanyCard","import React,{useState} from 'react'\r\n\r\n\r\nconst SearchBar=({onSearch})=>{\r\n    let[searchValue,setSearchValue] = useState('')\r\n\r\n    const handleChange=(e)=>{\r\n        setSearchValue(e.target.value)\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        onSearch(searchValue)\r\n    }\r\n\r\n\r\n    return(\r\n            <form onSubmit={handleSubmit} className='search-bar'>\r\n                <input  className='search-bar-input form-control ' \r\n                type='text' \r\n                placeholder='Search...' \r\n                value={searchValue} \r\n                onChange={handleChange}>\r\n                </input>\r\n                <button className='button-link'><div>Search</div></button>\r\n            </form>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBar","import {useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport UserContext from '../../UserContext';\r\n\r\n\r\nconst useLoggedIn=(loggedOut=false)=>{\r\n    let history = useHistory();\r\n    let {user}= useContext(UserContext);\r\n    let localUser= JSON.parse(window.localStorage.getItem('user'))\r\n    if(loggedOut){\r\n        if(user!==null||localUser!==null){\r\n            return history.push('/')\r\n\r\n        }\r\n    }\r\n    else if(user===null&&localUser===null){\r\n        return history.push('/login')\r\n    }\r\n\r\n}\r\n\r\nexport default useLoggedIn","import React, {useEffect,useState} from 'react'\r\nimport API from '../API'\r\nimport CompanyCard from './Cards/CompanyCard'\r\nimport SearchBar from './SearchBar'\r\nimport useLoggedIn from './Hooks/useLoggedIn'\r\n\r\nconst CompaniesList= ()=>{\r\n    let [companies,setCompanies]= useState(null);\r\n    let retreive = async()=>{\r\n        let token = await API.getCompanies()\r\n        setCompanies(token)\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        retreive();\r\n    },[])\r\n    useLoggedIn()\r\n    const filter = async (term)=>{\r\n        if(term===''){\r\n            retreive();\r\n        }\r\n        else{\r\n            let comps = await API.getCompanies({name:term})\r\n            setCompanies(comps)\r\n        }\r\n        \r\n    }\r\n\r\n        if(companies!==null){\r\n            return(\r\n                <div className='companies-list card-list'>\r\n                    <SearchBar onSearch={filter}/>\r\n                    <div className='card-list'>\r\n                    {\r\n                        companies.map(c=><CompanyCard company={c}/>)\r\n                    }\r\n                    </div>\r\n                    \r\n                </div>\r\n                )\r\n        }\r\n        else{\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n}\r\n\r\nexport default CompaniesList","import React, {useState, useContext} from  'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Form, Label, FormGroup,Container} from 'reactstrap'\r\nimport API from '../../API'\r\nimport UserContext from '../../UserContext'\r\n\r\n// inputs={\r\n//     name:'password',\r\n//     type:'password'\r\n//     label:'Password'\r\n//     value:''\r\n\r\n// }\r\n//destination='/home'\r\n// => html form with according inputs, with an redirect on submit to <destination> after an axios request based off of <authType>\r\n\r\n\r\nconst GenericForm=({inputs,destination,authType})=>{\r\n    let[error,setError]= useState(null)\r\n    let history= useHistory()\r\n    let {setUser}= useContext(UserContext)\r\n    let temp = {};\r\n    inputs.forEach((i)=>{\r\n        temp = {...temp,[i.name]:i.value}\r\n    })\r\n    let [formData,setFormData] = useState(temp)\r\n\r\n\r\n    const handleSubmit= async(e)=>{\r\n        e.preventDefault();\r\n        let func = authType==='Sign Up' ? API.signUp:API.Login\r\n        try{\r\n                //register/signup and receive token\r\n            let res = await func(formData)\r\n            let token = res.data.token\r\n            //use token to retreive remaining user info, store in context\r\n            let res2 = await API.getUser(formData.username,token)\r\n            let user = {...res2, token}\r\n            setUser(user)\r\n            history.push(destination);\r\n            setError(null)\r\n        }\r\n        catch(e){\r\n            setError('Invalid username or password!')\r\n        }\r\n       \r\n    }\r\n    const handleUpdate=(e)=>{\r\n        setFormData(d=>({...d,[e.target.name]:e.target.value}))\r\n    }\r\n\r\n\r\n    return(\r\n        <Container className='d-flex flex-column align-items-center'>\r\n            <h1 className='form-title'>{authType}</h1>\r\n            <Form className='form' onSubmit={handleSubmit}>\r\n                {inputs.map(i=>\r\n                    <FormGroup key={i.name}className='my-4'>\r\n                    <Label for={i.name}>{i.label}</Label>\r\n                    <input className='form-control' type= {i.type} \r\n                    id={i.name} \r\n                    name={i.name} \r\n                    value={formData[i.name]}\r\n                    onChange={handleUpdate}\r\n                    ></input>\r\n                    </FormGroup>\r\n                    \r\n                )}\r\n                \r\n                <button className='mx-0 button-link button-block'><div>{authType}</div></button>\r\n                {error!==null &&<small class='error-message'>{error}</small>}\r\n            </Form>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default GenericForm","import React from 'react';\r\nimport Form from './Form'\r\nimport useLoggedIn from '../Hooks/useLoggedIn'\r\n\r\n\r\nlet inputs=[\r\n    {\r\n        name:'username',\r\n        type:'text',\r\n        value:'',\r\n        label:'Username'\r\n    },\r\n    {\r\n        name:'password',\r\n        type:'password',\r\n        value:'',\r\n        label:'Password'\r\n    }\r\n]\r\nconst LoginForm=()=>{\r\n    useLoggedIn(true)\r\n\r\n    return(\r\n        <Form\r\n        inputs={inputs}\r\n        destination='/'\r\n        authType='Log In'\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from 'react';\r\nimport Form from './Form';\r\nimport useLoggedIn from '../Hooks/useLoggedIn';\r\n\r\n\r\nlet inputs=[\r\n    {\r\n        name:'username',\r\n        type:'text',\r\n        value:'',\r\n        label:'Username'\r\n    },\r\n    {\r\n        name:'password',\r\n        type:'password',\r\n        value:'',\r\n        label:'Password'\r\n    },\r\n    {\r\n        name:'firstName',\r\n        type:'text',\r\n        value:'',\r\n        label:'First Name'\r\n    },\r\n    {\r\n        name:'lastName',\r\n        type:'text',\r\n        value:'',\r\n        label:'Last Name'\r\n    },\r\n    {\r\n        name:'email',\r\n        type:'email',\r\n        value:'',\r\n        label:'Email'\r\n    }\r\n]\r\nconst SignUpForm=()=>{\r\n    useLoggedIn(true)\r\n    return(\r\n        <Form\r\n        inputs={inputs}\r\n        destination='/'\r\n        authType='Sign Up'\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport default SignUpForm","import React, { useEffect, useContext, useState} from 'react';\r\nimport UserContext from '../../UserContext';\r\nimport Card from './Card'\r\nimport API from '../../API'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst JobCard=({job})=>{\r\n    let {user,setUser}= useContext(UserContext);\r\n    let [applied, setApplied] = useState(false);\r\n    let history=useHistory()\r\n\r\n    useEffect(()=>{\r\n        if(user!==null){\r\n            let applications = user.applications\r\n            if(applications.includes(job.id)){\r\n                setApplied(true)\r\n            }\r\n        }\r\n        \r\n        \r\n    },[])\r\n    \r\n    const apply=async()=>{\r\n        try{\r\n            if(user===null){\r\n                history.push('/login')\r\n            }\r\n            await API.apply(job.id, user.username,user.token)\r\n            setUser(u=>({...u,applications:[...u.applications, job.id]}))\r\n            setApplied(true)\r\n\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n            setApplied(false)\r\n        }\r\n    }\r\n    let body=(\r\n        <div className='mcard-container'>\r\n            <ul className='mcard-list'>\r\n                <li>Salary: {job.salary}</li>\r\n                <li>Equity: {job.equity}</li>\r\n            </ul>\r\n            {!applied? (\r\n                <button onClick={apply}className='button-link success'><div>Apply!</div></button>\r\n            ):\r\n            (\r\n                <button  className='button-link success disabled'><div>Applied!</div></button>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n\r\n    return(\r\n        <Card\r\n        title={job.title}\r\n        body={body}\r\n        />\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default JobCard\r\n","import React, {useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport JobCard from './Cards/JobCard'\r\nimport API from '../API'\r\nimport useLoggedIn from './Hooks/useLoggedIn'\r\n\r\nconst CompanyInfo=()=>{\r\n    let [company, setCompany] = useState(null)\r\n    let {handle} = useParams()\r\n\r\n    useState(()=>{\r\n        const retreive= async()=>{\r\n        let company = await API.getCompany(handle)\r\n        setCompany(company)\r\n        }\r\n        retreive();\r\n    },[])\r\n    useLoggedIn()\r\n\r\n    if(company!==null){\r\n        return(\r\n            <div className='company-info'>\r\n                <h2 className='company-info-title'>{company.name}</h2>\r\n                <p className='company-info-description'>{company.description}</p>\r\n                <div className='card-list'>\r\n                    {company.jobs.map(j=><JobCard key={j.id}job={j}/>)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return <div>Loading...</div>\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default CompanyInfo","import React, {useEffect,useState} from 'react'\r\nimport API from '../API'\r\nimport JobCard from './Cards/JobCard'\r\nimport SearchBar from './SearchBar'\r\nimport useLoggedIn from './Hooks/useLoggedIn'\r\n\r\nconst JobList= ()=>{\r\n    let [jobs,setJobs]= useState(null);\r\n    let mounted = true;\r\n    let retreive = async()=>{\r\n        let jobs = await API.getJobs()\r\n        if(mounted){\r\n            setJobs(jobs)\r\n        }\r\n\r\n    }\r\n    useEffect(()=>{\r\n        retreive();\r\n        return ()=>{mounted=false};\r\n    },[])\r\n    useLoggedIn()\r\n    \r\n    const filter = async (term)=>{\r\n        if(term===''){\r\n            retreive();\r\n        }\r\n        else{\r\n            let jobs = await API.getJobs({title:term})\r\n            setJobs(jobs)\r\n        }\r\n    }\r\n        if(jobs!==null){\r\n            return(\r\n                <div className='job-list'>\r\n                    <SearchBar onSearch={filter}/>\r\n                    <div className='card-list'>\r\n                        {jobs.map(j=><JobCard job={j}/>)}\r\n                    </div>\r\n                </div>\r\n                \r\n                )\r\n        }\r\n        else{\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n}\r\n\r\nexport default JobList","import React, {useContext, useState,useEffect} from 'react'\r\nimport UserContext from '../UserContext'\r\nimport {Form, Label, FormGroup,Container} from 'reactstrap'\r\nimport API from '../API'\r\nimport useLoggedIn from './Hooks/useLoggedIn'\r\n\r\n\r\n\r\nconst ProfileInfo=()=>{\r\n    let {user,setUser}= useContext(UserContext)\r\n    let [formData,setFormData]= useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password:''\r\n    });\r\n    let [error, setError]= useState(null)\r\n    let [submitted, setSubmitted]= useState(null)\r\n    \r\n    useEffect(()=>{\r\n        if(user!==null){\r\n            setFormData({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                email: user.email,\r\n                password:''\r\n            })\r\n        }\r\n        return ()=>{setFormData({})}\r\n        \r\n    },[user])\r\n    useLoggedIn()\r\n    const handleChange=(e)=>{\r\n        setFormData(d=>({...d,[e.target.name]:e.target.value}))\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        \r\n        const validate= async()=>{\r\n            try{\r\n                let res = await API.Login({username:user.username, password:formData.password})\r\n                console.log(res)\r\n                if(res.data.token){\r\n                    let data = {...formData}\r\n                    delete data.password\r\n                    let newUser = await API.PatchUser(user.username,data, user.token)\r\n                    console.log(newUser)\r\n                    setUser({...newUser.user,token:user.token})\r\n                    setError(null)\r\n                    setSubmitted(true)\r\n                }\r\n            }\r\n            catch(e){\r\n                setError('Password does not match!')\r\n            }\r\n        }\r\n        validate()\r\n    }\r\n    \r\n    if(user!==null){\r\n        return(\r\n            <div className=\"profile-info\">\r\n                <h3 className='profile-info-title'>Profile Information</h3>\r\n                <Form className='form' onSubmit={handleSubmit} >\r\n                        <FormGroup key='username-input' className='my-4'>\r\n                            <Label for='username'>Username</Label>\r\n                            <input className='form-control' type='text' \r\n                            id='username'\r\n                            name='username'\r\n                            value={user.username}\r\n                            disabled\r\n                            ></input>\r\n                        </FormGroup>\r\n                        <FormGroup key='first-name-input' className='my-4'>\r\n                            <Label for='firstName'>First Name</Label>\r\n                            <input className='form-control' type='text' \r\n                            id='firstName'\r\n                            name='firstName'\r\n                            value={formData.firstName}\r\n                            onChange={handleChange}\r\n                            ></input>\r\n                        </FormGroup>\r\n                        <FormGroup key='last-name-input' className='my-4'>\r\n                            <Label for='lastName'>Last Name</Label>\r\n                            <input className='form-control' type='text' \r\n                            id='lastName'\r\n                            name='lastName'\r\n                            value={formData.lastName}\r\n                            onChange={handleChange}\r\n                            ></input>\r\n                        </FormGroup>\r\n                        <FormGroup key='email-input' className='my-4'>\r\n                            <Label for='email'>Email</Label>\r\n                            <input className='form-control' type='email' \r\n                            id='email'\r\n                            name='email'\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            ></input>\r\n                        </FormGroup>\r\n                        <FormGroup key='password-input' className='my-4'>\r\n                            <Label for='password'>Input Password to confirm changes</Label>\r\n                            <input className='form-control' type='password' \r\n                            id='password'\r\n                            name='password'\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                            ></input>\r\n                        </FormGroup>\r\n                        <button className='button-link button-block'><div>Save Changes</div></button>\r\n                        {error!==null&& <small className='error-message'>{error}</small>}\r\n                        {error===null&&submitted &&<small className='profile-info-text'>Changes Added!</small>}\r\n\r\n                </Form>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    return <div>Loading...</div>\r\n    \r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter, Route,Switch} from 'react-router-dom'\nimport '../Styles/App.css'\nimport Home from './Home'\nimport Navbar from './Navbar'\nimport CompaniesList from './CompaniesList'\nimport LoginForm from './Forms/LoginForm'\nimport SignupForm from './Forms/SignupForm'\nimport UserContext from '.././UserContext'\nimport CompanyInfo from './CompanyInfo'\nimport JobList from './JobList'\nimport ProfileInfo from './ProfileInfo'\n\nfunction App() {\n  let [user, setUser]= useState(null)\n  useEffect(()=>{\n    let storedUser= JSON.parse(window.localStorage.getItem('user'))\n    setUser(storedUser)\n  },[])\n  useEffect(()=>{\n        window.localStorage.setItem('user', JSON.stringify(user))\n  },[user])\n \n\n  return (\n    <BrowserRouter>\n        <Switch>\n            <UserContext.Provider value={{user, setUser}}>\n                <Navbar/>\n                <Route exact path='/'>\n                    <Home/>\n                </Route>\n                <Route exact path='/signup'>\n                    <SignupForm/>\n                </Route>\n                <Route exact path='/login'>\n                    <LoginForm/>\n                </Route>\n                <Route exact path='/companies'>\n                    <CompaniesList/>\n                </Route>\n                <Route exact path='/companies/:handle'>\n                    <CompanyInfo/>\n                </Route>\n                <Route exact path='/jobs'>\n                    <JobList/>\n                </Route>\n                <Route exact path='/profile'>\n                    <ProfileInfo/>\n                </Route>\n            </UserContext.Provider>\n        </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}